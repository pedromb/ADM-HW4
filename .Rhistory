lines(net_pois, col=3)
# Power Law hipothesis
bs_p = bootstrap_p(net_plaw, threads=8)
bs_p$p
data <- degree(nets[[2]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
plot(net_plaw, ylab="CDF", xlab="")
lines(net_plaw, col=2)
lines(net_pois, col=3)
legend("topright", c("Power Law", "Poisson"))
data <- degree(nets[[2]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
plot(net_plaw, ylab="CDF", xlab="")
lines(net_plaw, col=2, color="blue")
lines(net_pois, col=3, color="green")
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
data <- degree(nets[[2]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
plot(net_plaw, ylab="CDF", xlab="")
lines(net_plaw, col=2, fill="blue")
lines(net_pois, col=3, fill="green")
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
data <- degree(nets[[2]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
plot(net_plaw, ylab="CDF", xlab="")
lines(net_plaw, col=2, col="blue", lwd=1.5)
lines(net_pois, col=3, col="green", lwd=1.5)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
plot(net_plaw, ylab="CDF", xlab="")
lines(net_plaw, col="blue", lwd=1.5)
lines(net_pois, col="green", lwd=1.5)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
data <- degree(nets[[2]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
plot(net_plaw, ylab="CDF", xlab="")
lines(net_plaw, col="blue", lwd=2)
lines(net_pois, col="green", lwd=2)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
plot(net_plaw, ylab="CDF", xlab="", pch=26)
lines(net_plaw, col="blue", lwd=2)
lines(net_pois, col="green", lwd=2)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
plot(net_plaw, ylab="CDF", xlab="", pch=16)
lines(net_plaw, col="blue", lwd=2)
lines(net_pois, col="green", lwd=2)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
plot(net_plaw, ylab="CDF", xlab="")
lines(net_plaw, col="blue", lwd=2)
lines(net_pois, col="green", lwd=2)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
par(mfrow=c(2,2))
for(i in 1:sim) {
data <- degree(nets[[i]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
bs_p = bootstrap_p(net_plaw, threads=8)
plot(net_plaw,
ylab="CDF",
xlab="",
tile=paste("p-value = ", bs_p$p, sep = ""))
lines(net_plaw, col="blue", lwd=2)
lines(net_pois, col="green", lwd=2)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
}
summary(net_plaw)
net_plaw$dat
net_plaw$xmin
net_plaw$mle
net_plaw$pars
par(mfrow=c(2,2))
for(i in 1:sim) {
data <- degree(nets[[i]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
bs_p = bootstrap_p(net_plaw, threads=8)
plot(net_plaw,
ylab="CDF",
xlab="")
title(main= paste("p-value = ", bs_p$p, sep = ""))
lines(net_plaw, col="blue", lwd=2)
lines(net_pois, col="green", lwd=2)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
}
m <- 3
n <- 1000
sim <- 4
nets <- rep(NA, sim)
deg_dist <- rep(NA, sim)
cum_deg_dist <- rep(NA, sim)
for(i in 1:sim) {
nets[i] <- list(create_graph(n=n, m=1))
deg_dist[i] <- list(degree_distribution(nets[[i]]))
cum_deg_dist[i] <- list(degree_distribution(nets[[i]], cumulative = T))
}
library(poweRlaw)
par(mfrow=c(2,2))
for(i in 1:sim) {
data <- degree(nets[[i]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
bs_p = bootstrap_p(net_plaw, threads=8)
plot(net_plaw,
ylab="CDF",
xlab="")
title(main= paste("p-value = ", bs_p$p, sep = ""))
lines(net_plaw, col="blue", lwd=2)
lines(net_pois, col="green", lwd=2)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
}
m <- 3
n <- 10000
sim <- 4
nets <- rep(NA, sim)
deg_dist <- rep(NA, sim)
cum_deg_dist <- rep(NA, sim)
for(i in 1:sim) {
nets[i] <- list(create_graph(n=n, m=1))
deg_dist[i] <- list(degree_distribution(nets[[i]]))
cum_deg_dist[i] <- list(degree_distribution(nets[[i]], cumulative = T))
}
library(poweRlaw)
par(mfrow=c(2,2))
for(i in 1:sim) {
data <- degree(nets[[i]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
bs_p = bootstrap_p(net_plaw, threads=8)
plot(net_plaw,
ylab="CDF",
xlab="")
title(main= paste("p-value = ", bs_p$p, sep = ""))
lines(net_plaw, col="blue", lwd=2)
lines(net_pois, col="green", lwd=2)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
}
net_plaw$pars
m <- 3
n <- 100000
sim <- 4
nets <- rep(NA, sim)
deg_dist <- rep(NA, sim)
cum_deg_dist <- rep(NA, sim)
for(i in 1:sim) {
nets[i] <- list(create_graph(n=n, m=1))
deg_dist[i] <- list(degree_distribution(nets[[i]]))
cum_deg_dist[i] <- list(degree_distribution(nets[[i]], cumulative = T))
}
length(nets)
par(mfrow=c(2,2))
for(i in 1:sim) {
data <- degree(nets[[i]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
bs_p = bootstrap_p(net_plaw, threads=8)
plot(net_plaw,
ylab="CDF",
xlab="")
title(main= paste("p-value = ", bs_p$p, sep = ""))
lines(net_plaw, col="blue", lwd=2)
lines(net_pois, col="green", lwd=2)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
}
net_plaw$pars
par(mfrow=c(2,2))
for(i in 1:sim) {
data <- degree(nets[[i]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
bs_p = bootstrap_p(net_plaw, threads=8, sims = 200)
plot(net_plaw,
ylab="CDF",
xlab="")
title(main= paste("p-value = ", bs_p$p, sep = ""))
lines(net_plaw, col="blue", lwd=2)
lines(net_pois, col="green", lwd=2)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
}
par(mfrow=c(2,2))
for(i in 1:sim) {
data <- degree(nets[[i]])
net_plaw <- displ$new(data)
net_pois <- dispois$new(data)
est_law <- estimate_xmin(net_plaw)
est_pois <- estimate_xmin(net_pois)
net_plaw$setXmin(est_law)
net_pois$setXmin(est_pois)
bs_p = bootstrap_p(net_plaw, threads=8, no_of_sims = 200, seed=123)
plot(net_plaw,
ylab="CDF",
xlab="")
title(main= paste("p-value = ", bs_p$p, sep = ""))
lines(net_plaw, col="blue", lwd=2)
lines(net_pois, col="green", lwd=2)
legend("topright", c("Power Law", "Poisson"), fill=c("blue", "green"))
}
library(igraph)
library(pbapply)
library(ggplot2)
create_graph <- function(gamma=0.5, n=1000, m=1) {
if (!m %in% c(1,3)) {
stop("m should be 1 or 3")
}
nodes <- rep(1:n, each=m)
edges <- rep(NA, n*m)
if(m == 1){
edges[1:4] <- c(2,3,4,1)
}
else {
edges[1:12] <- c(2,3,4,1,3,4,1,2,4,1,2,3)
}
# 0 chooses a page uniformly
# 1 new page copies random link
flips <- sample(c(0,1), prob=c(gamma, 1-gamma), n*m-4*m, replace=T)
pb <- timerProgressBar(min=m*4+1, max=n*m, initial=m*4+1)
start <- m*4+1
for(i in seq(start, n*m, by = m)) {
for(j in 1:m) {
flips_index <- i-4*m+j-1
if(flips[flips_index] == 0) {
page <- sample(nodes[1:i-1], 1, replace = T)
}
else {
page <- sample(edges[1:i-1], 1, replace = T)
}
edges[i+j-1] <- page
}
setTimerProgressBar(pb, i)
}
df <- data.frame(nodes=nodes, edges=edges)
net <- graph_from_data_frame(df, directed=T)
return(net)
}
net <- create_graph
plot(net)
net
net <- create_graph()
plot(net)
plot(net. vertex.size=degree(net))
plot(net, vertex.size=degree(net))
plot(net, vertex.size=degree(net), edge.arrow.size=.5)
plot(net, vertex.size=degree(net), edge.arrow.size=.5, vertex.label=NA)
l <- layout_on_sphere(net)
plot(net, vertex.size=degree(net), edge.arrow.size=.5, vertex.label=NA, layout=l)
tkplot(net, vertex.size=degree(net), edge.arrow.size=.5, vertex.label=NA, layout=l)
tkplot(net, vertex.size=degree(net), edge.arrow.size=.5, vertex.label=NA, layout=l)
l <- layout_with_fr(net)
plot(net, vertex.size=degree(net), edge.arrow.size=.5, vertex.label=NA, layout=l)
plot(net, vertex.size=degree(net), edge.arrow.size=.5, vertex.label=NA, layout=l, width = 2)
plot(net, vertex.size=degree(net), width=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
plot(net, vertex.size=degree(net), width=1, edge.arrow.size=.5, vertex.label=NA, layout=l)
plot(net, vertex.size=degree(net), width=1, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE, ylim=c(1,4),xlim=c(-17,24), asp = 0)
plot(net, vertex.size=degree(net), width=1, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE, ylim=c(0,100),xlim=c(-17,24), asp = 0)
plot(net, vertex.size=degree(net), width=1, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE, ylim=c(0,1000),xlim=c(-17,24), asp = 0)
plot(net, vertex.size=degree(net), width=1, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE, ylim=c(0,1000),xlim=c(0,1000), asp = 0)
plot(net, vertex.size=degree(net), width=1, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE, ylim=c(0,1000),xlim=c(0,200), asp = 0)
plot(net, vertex.size=degree(net), width=1, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE, ylim=c(0,1000),xlim=c(-100,200), asp = 0)
plot(net, vertex.size=degree(net), width=1, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE, ylim=c(0,1000),xlim=c(-200,200), asp = 0)
plot(net, vertex.size=degree(net), width=1, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE, ylim=c(0,1000),xlim=c(-100,300), asp = 0)
plot(net, vertex.size=degree(net), width=1, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE, ylim=c(0,200),xlim=c(-100,300), asp = 0)
plot(net, vertex.size=degree(net), width=100, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE, ylim=c(0,200),xlim=c(-100,300), asp = 0)
plot(net, vertex.size=degree(net), width=100, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE, ylim=c(0,200),xlim=c(-100,300))
plot(net, vertex.size=degree(net), width=100, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale = FALSE)
plot(net, vertex.size=degree(net), width=100, edge.arrow.size=.5, vertex.label=NA, layout=l)
plot(net, vertex.size=degree(net), edge.size=4 edge.arrow.size=.5, vertex.label=NA, layout=l)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale=FALSE)
tkplot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale=FALSE)
net <- create_graph(n=100)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l, rescale=FALSE)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
net <- create_graph(n=10)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
net <- create_graph(n=10)
net
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
plot(net
)
degree(net)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA)
net <- create_graph(n=100)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA)
plot(net, vertex.size=degree(net), edge.arrow.size=.2, vertex.label=NA)
l <- layout_with_fr(net)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
net <- create_graph(n=500)
l <- layout_with_fr(net)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
l <- layout_on_sphere(net)
net
l <- layout_on_sphere(net)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
net <- create_graph(n=1000)
plot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
tkplot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
tkplot(net, vertex.size=degree(net), edge.size=4, edge.arrow.size=.5, vertex.label=NA, layout=l)
tkplot(net, vertex.size=degree(net), edge.arrow.size=.5, vertex.label=NA, layout=l)
tkplot(net, vertex.size=degree(net), edge.arrow.size=.2, vertex.label=NA, layout=l)
plot(net, vertex.size=degree(net), edge.arrow.size=.2, vertex.label=NA, layout=l)
nodes <- rep(1:100, each=1)
edges <- rep(NA, 100)
nodes
nodes <- rep(1:100, each=1)
edges <- rep(NA, 100)
edges
edges[1:4] <- c(2,3,4,1)
edges
table(edges)
edges[1:7] <- c(2,3,4,1,2,2,1)
edges
table(edges)
table(edges) + 1
(table(edges) + 1)/length(1:7)
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
ent
net
plot(net)
plot(net)
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
warnings()
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
plot(net)
plot(degree_distribution(net))
plot(degree_distribution(net, cumulative = T), log='xy')
source('~/github.com/msc_data_science/first_semester/stat4ds/homeworks/homework2/homework2.R')
xx <- c(2.2, 2.7, 1.0, 1.4, 1.1)
likelihood <- function(e, x) {
n <- length(x)
y <- (e^n)*(prod(1/x)^(e+1))
return(y)
}
seq(0,5)
seq(0,5, 0.1)
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
curve(ee, likelihood(ee, xx))
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
curve(likelihood(xx), from = 0, to=6, lwd=4)
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
curve(likelihood(x),
col='orchid',
from = 0,
to=6,
lwd=4)
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
source('~/github.com/msc_data_science/first_semester/stat4ds/exercises/exam_questions.R')
xx <- c(2.2, 2.7, 1.0, 1.4, 1.1)
likelihood <- function(alpha, x) {
n <- length(x)
y <- (alpha^n)*(prod(1/alpha)^(alpha+1))
return(y)
}
mle <- sum(log(xx))/length(xx)
curve(likelihood(x, xx),
from = 0,
to = 8)
xx <- c(2.2, 2.7, 1.0, 1.4, 1.1)
likelihood <- function(alpha, x) {
n <- length(x)
y <- (alpha^n)*(prod(1/alpha)^(alpha+1))
return(y)
}
xx <- c(2.2, 2.7, 1.0, 1.4, 1.1)
mle <- sum(log(xx))/length(xx)
curve(likelihood(x, xx), from = 0, to = 8)
curve(likelihood(x, xx), from = 0, to = 8)
likelihood(seq(0,8), xx)
likelihood(seq(1,8), xx)
xx <- c(2.2, 2.7, 1.0, 1.4, 1.1)
likelihood <- function(alpha, x) {
n <- length(x)
y <- (alpha^n)*(prod(1/alpha)^(alpha+1))
return(y)
}
mle <- sum(log(xx))/length(xx)
curve(likelihood(x, xx), from = 1, to = 8)
xx <- c(2.2, 2.7, 1.0, 1.4, 1.1)
likelihood <- function(alpha, x) {
n <- length(x)
y <- (alpha^n)*(prod(1/x)^(alpha+1))
return(y)
}
mle <- sum(log(xx))/length(xx)
curve(likelihood(x, xx), from = 0, to = 8)
mle <- sum(log(xx))/length(xx)
curve(likelihood(x, xx), from = 0, to = 8)
point(mle, likelihood(mle, xx),add=T)
curve(likelihood(x, xx), from = 0, to = 8)
points(mle, likelihood(mle, xx),add=T)
curve(likelihood(x, xx), from = 0, to = 8)
points(likelihood(mle, xx), mle,add=T)
curve(likelihood(x, xx), from = 0, to = 8)
points(likelihood(mle, xx), mle)
curve(likelihood(x, xx), from = 0, to = 8)
points(likelihood(mle, xx), mle)
likelihood(mle, xx)
xx <- c(2.2, 2.7, 1.0, 1.4, 1.1)
likelihood <- function(alpha, x) {
n <- length(x)
y <- (alpha^n)*(prod(1/x)^(alpha+1))
return(y)
}
mle <- length(xx)/sum(log(xx))
curve(likelihood(x, xx), from = 0, to = 8)
points(likelihood(mle, xx), mle)
likelihood(mle, xx)
mle
curve(likelihood(x, xx), from = 0, to = 8)
points(mle, likelihood(mle, xx))
setwd("~/github.com/ADM-HW4")
data <- read.csv("data/author_subgraph_aris.csv")
View(data)
source('~/github.com/ADM-HW4/charts.R')
g
source('~/github.com/ADM-HW4/charts.R')
View(data)
source('~/github.com/ADM-HW4/charts.R')
g
source('~/github.com/ADM-HW4/charts.R')
g
source('~/github.com/ADM-HW4/charts.R')
g
source('~/github.com/ADM-HW4/charts.R')
source('~/github.com/ADM-HW4/charts.R')
source('~/github.com/ADM-HW4/charts.R')
g
source('~/github.com/ADM-HW4/charts.R')
g
source('~/github.com/ADM-HW4/charts.R')
g
source('~/github.com/ADM-HW4/charts.R')
g
source('~/github.com/ADM-HW4/charts.R')
g
source('~/github.com/ADM-HW4/charts.R')
g
